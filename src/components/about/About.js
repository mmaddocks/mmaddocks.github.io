import React from 'react';
import { Link } from 'react-router-dom';
import { gsap } from 'gsap/all';
import { Home } from 'react-feather';

// Components
import AboutButton from './AboutButton';
import AboutInterest from './AboutInterest';

// Images
import HeroImage from '../../assets/mountain-bg.jpg';
import HeroImageClipping from '../../assets/mountain-bg-clipping.png';

class About extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      isLoaded: false,
      // interests: [
      //   'climbing',
      //   'skiing',
      //   'surfing',
      // ],
      interests: [
        {
          name: 'climbing',
          svgTitle: <svg xmlns="http://www.w3.org/2000/svg" width="988.224" height="227.633" viewBox="0 0 988.224 227.633" fill="currentColor"><path id="Path_1" data-name="Path 1" d="M163.537-109.656H127.452a35.7,35.7,0,0,0-4.037-12.482,31.826,31.826,0,0,0-7.827-9.351,34.526,34.526,0,0,0-11-5.932,42.608,42.608,0,0,0-13.47-2.06q-13.1,0-22.821,6.467T53.222-114.229q-5.355,12.317-5.355,29.865,0,18.043,5.4,30.318T68.381-35.509a40.618,40.618,0,0,0,22.491,6.261,44.9,44.9,0,0,0,13.305-1.895A34.448,34.448,0,0,0,115.094-36.7a31.831,31.831,0,0,0,7.95-8.939,35.509,35.509,0,0,0,4.408-12.028l36.085.165a65.4,65.4,0,0,1-6.962,22.368,67.564,67.564,0,0,1-14.912,19.2A69.8,69.8,0,0,1,119.419-2.6,81.477,81.477,0,0,1,90.3,2.307q-22.574,0-40.328-10.216T21.956-37.486Q11.7-56.847,11.7-84.364q0-27.6,10.381-46.96t28.176-29.536q17.8-10.175,40.04-10.175a86.918,86.918,0,0,1,27.229,4.119,69.454,69.454,0,0,1,22.285,11.987,62.871,62.871,0,0,1,15.859,19.237A72.062,72.062,0,0,1,163.537-109.656Zm60.06-59.071V0H188.5V-168.727ZM251.608,0V-126.545h35.1V0Zm17.713-142.858a18.987,18.987,0,0,1-13.429-5.232,16.587,16.587,0,0,1-5.6-12.564,16.5,16.5,0,0,1,5.6-12.482,18.884,18.884,0,0,1,13.347-5.232,18.946,18.946,0,0,1,13.47,5.232,16.554,16.554,0,0,1,5.561,12.482,16.642,16.642,0,0,1-5.561,12.564A18.843,18.843,0,0,1,269.321-142.858ZM314.716,0V-126.545h33.449v22.327h1.483a35.1,35.1,0,0,1,13.182-17.548q9.227-6.426,22.08-6.426,13.017,0,22.162,6.467a30.833,30.833,0,0,1,12.193,17.507h1.318a33.812,33.812,0,0,1,14.047-17.425q10.175-6.55,24.1-6.55,17.713,0,28.794,11.246T498.6-85.105V0H463.588V-78.185q0-10.545-5.6-15.818a19.639,19.639,0,0,0-14.006-5.273q-9.557,0-14.912,6.055t-5.355,15.942V0H389.688V-78.926q0-9.31-5.314-14.83t-13.965-5.52a19.331,19.331,0,0,0-10.5,2.925,20.628,20.628,0,0,0-7.374,8.156,26.177,26.177,0,0,0-2.719,12.234V0ZM526.943,0V-168.727h35.1v63.438h1.071a46.529,46.529,0,0,1,6.714-10.422,35.341,35.341,0,0,1,11.534-8.9q7.126-3.584,17.754-3.584a47.767,47.767,0,0,1,25.54,7.209q11.7,7.209,18.7,21.668t7,36.209q0,21.173-6.8,35.714t-18.455,22A47.376,47.376,0,0,1,599.031,2.06q-10.216,0-17.342-3.378a35.542,35.542,0,0,1-11.658-8.527,42.39,42.39,0,0,1-6.92-10.422h-1.565V0ZM561.3-63.273a56.323,56.323,0,0,0,3.131,19.69,28.956,28.956,0,0,0,9.063,13.058,22.639,22.639,0,0,0,14.418,4.655,22.5,22.5,0,0,0,14.5-4.737,29.234,29.234,0,0,0,9.021-13.182,56.556,56.556,0,0,0,3.089-19.484,55.917,55.917,0,0,0-3.048-19.278,28.718,28.718,0,0,0-8.98-13.017,22.761,22.761,0,0,0-14.582-4.7,23.008,23.008,0,0,0-14.459,4.531,28.282,28.282,0,0,0-9.021,12.852A55.629,55.629,0,0,0,561.3-63.273ZM673.673,0V-126.545h35.1V0Zm17.713-142.858a18.987,18.987,0,0,1-13.429-5.232,16.587,16.587,0,0,1-5.6-12.564,16.5,16.5,0,0,1,5.6-12.482,18.884,18.884,0,0,1,13.347-5.232,18.946,18.946,0,0,1,13.47,5.232,16.554,16.554,0,0,1,5.561,12.482,16.642,16.642,0,0,1-5.561,12.564A18.843,18.843,0,0,1,691.386-142.858Zm80.492,69.7V0h-35.1V-126.545H770.23v22.327h1.483A35.521,35.521,0,0,1,785.8-121.726q9.886-6.467,23.974-6.467,13.182,0,22.986,5.767A39.253,39.253,0,0,1,848-105.99q5.438,10.669,5.438,25.416V0h-35.1V-74.312q.082-11.616-5.932-18.166t-16.56-6.55a24.941,24.941,0,0,0-12.482,3.048,20.965,20.965,0,0,0-8.4,8.857A30.733,30.733,0,0,0,771.878-73.159ZM938.051,49.267q-17.054,0-29.206-4.614t-19.32-12.44a37.694,37.694,0,0,1-9.31-17.384l32.46-4.366a20.187,20.187,0,0,0,4.7,6.55A24.4,24.4,0,0,0,925.9,22.08a37.386,37.386,0,0,0,12.976,1.977q11.452,0,18.908-5.437T965.239.741V-22.409h-1.483a33.351,33.351,0,0,1-6.92,9.969,34.874,34.874,0,0,1-11.864,7.662,45.6,45.6,0,0,1-17.3,2.966A51.471,51.471,0,0,1,901.76-8.445Q890.1-15.077,883.223-28.794T876.344-63.52q0-21.5,7-35.92t18.661-21.585a47.907,47.907,0,0,1,25.581-7.168q10.628,0,17.8,3.584a35.232,35.232,0,0,1,11.575,8.9,49.12,49.12,0,0,1,6.8,10.422h1.318v-21.256h34.849V1.236q0,15.818-7.909,26.487T970.141,43.83Q956.176,49.267,938.051,49.267Zm.742-77.443a23.945,23.945,0,0,0,14.376-4.243,26.765,26.765,0,0,0,9.063-12.193A51.446,51.446,0,0,0,965.4-63.685,54.075,54.075,0,0,0,962.273-83a28.193,28.193,0,0,0-9.062-12.729,23.052,23.052,0,0,0-14.418-4.531,22.9,22.9,0,0,0-14.582,4.655,28.47,28.47,0,0,0-8.98,12.893,54.684,54.684,0,0,0-3.048,19.031,52.16,52.16,0,0,0,3.09,18.908,26.787,26.787,0,0,0,8.98,12.276Q930.142-28.176,938.793-28.176Z" transform="translate(-11.699 178.366)"/></svg>,
        },
        {
          name: 'skiing',
          svgTitle: <svg xmlns="http://www.w3.org/2000/svg" width="681.006" height="227.633" viewBox="0 0 681.006 227.633" fill="currentColor"><path id="Path_2" data-name="Path 2" d="M106.2-120.2q-.989-9.969-8.486-15.489t-20.349-5.52a39.455,39.455,0,0,0-14.747,2.43,20.739,20.739,0,0,0-9.186,6.714,15.921,15.921,0,0,0-3.172,9.722,13.688,13.688,0,0,0,1.936,7.909A18.891,18.891,0,0,0,58-108.626a41.484,41.484,0,0,0,8.568,4.2,83.744,83.744,0,0,0,10.381,3.007l15.159,3.625A106.923,106.923,0,0,1,112.375-91.2a61.563,61.563,0,0,1,15.983,10.134,42.606,42.606,0,0,1,10.5,14.17,45.19,45.19,0,0,1,3.831,18.7q-.082,15.489-7.868,26.817T112.416-3.831Q97.793,2.389,77.2,2.389q-20.432,0-35.55-6.261T18.084-22.45Q9.639-34.767,9.227-52.974h34.52a25.5,25.5,0,0,0,4.9,14.129,26.28,26.28,0,0,0,11.616,8.486,45.2,45.2,0,0,0,16.518,2.842,43.053,43.053,0,0,0,15.777-2.636,24.145,24.145,0,0,0,10.422-7.332,16.932,16.932,0,0,0,3.707-10.793,14.128,14.128,0,0,0-3.337-9.557,26.051,26.051,0,0,0-9.722-6.591A100.428,100.428,0,0,0,78.02-69.369L59.648-73.983q-21.338-5.19-33.7-16.23T13.676-119.955q-.082-15.324,8.2-26.776t22.78-17.878q14.5-6.426,32.955-6.426,18.784,0,32.831,6.426t21.874,17.878a47.3,47.3,0,0,1,8.074,26.528Zm91.531,83.787.082-42.1h5.108l40.534-48.031h40.287l-54.457,63.6H220.96ZM165.926,0V-168.727h35.1V0Zm79.091,0L207.778-55.116l23.4-24.8L286.128,0Zm55.858,0V-126.545h35.1V0Zm17.713-142.858a18.987,18.987,0,0,1-13.429-5.232,16.587,16.587,0,0,1-5.6-12.564,16.5,16.5,0,0,1,5.6-12.482,18.884,18.884,0,0,1,13.347-5.232,18.946,18.946,0,0,1,13.47,5.232,16.554,16.554,0,0,1,5.561,12.482,16.642,16.642,0,0,1-5.561,12.564A18.843,18.843,0,0,1,318.588-142.858ZM363.983,0V-126.545h35.1V0ZM381.7-142.858a18.987,18.987,0,0,1-13.429-5.232,16.587,16.587,0,0,1-5.6-12.564,16.5,16.5,0,0,1,5.6-12.482,18.884,18.884,0,0,1,13.347-5.232,18.946,18.946,0,0,1,13.47,5.232,16.554,16.554,0,0,1,5.561,12.482,16.642,16.642,0,0,1-5.561,12.564A18.843,18.843,0,0,1,381.7-142.858Zm80.491,69.7V0h-35.1V-126.545H460.54v22.327h1.483a35.521,35.521,0,0,1,14.088-17.507q9.886-6.467,23.974-6.467,13.182,0,22.986,5.767a39.253,39.253,0,0,1,15.241,16.436q5.438,10.669,5.438,25.416V0h-35.1V-74.312q.082-11.616-5.932-18.166t-16.56-6.55A24.941,24.941,0,0,0,473.68-95.98a20.965,20.965,0,0,0-8.4,8.857A30.734,30.734,0,0,0,462.188-73.159ZM628.361,49.267q-17.054,0-29.206-4.614t-19.32-12.44a37.694,37.694,0,0,1-9.31-17.384l32.46-4.366a20.187,20.187,0,0,0,4.7,6.55,24.4,24.4,0,0,0,8.527,5.067,37.387,37.387,0,0,0,12.976,1.977q11.452,0,18.908-5.437T655.548.741V-22.409h-1.483a33.35,33.35,0,0,1-6.92,9.969,34.874,34.874,0,0,1-11.864,7.662,45.6,45.6,0,0,1-17.3,2.966A51.471,51.471,0,0,1,592.07-8.445q-11.658-6.632-18.537-20.349T566.653-63.52q0-21.5,7-35.92t18.661-21.585a47.907,47.907,0,0,1,25.581-7.168q10.628,0,17.8,3.584a35.231,35.231,0,0,1,11.575,8.9,49.115,49.115,0,0,1,6.8,10.422h1.318v-21.256h34.849V1.236q0,15.818-7.909,26.487T660.45,43.83Q646.486,49.267,628.361,49.267Zm.742-77.443a23.945,23.945,0,0,0,14.376-4.243,26.765,26.765,0,0,0,9.063-12.193,51.446,51.446,0,0,0,3.172-19.072A54.075,54.075,0,0,0,652.582-83a28.193,28.193,0,0,0-9.062-12.729,23.052,23.052,0,0,0-14.418-4.531,22.9,22.9,0,0,0-14.582,4.655,28.47,28.47,0,0,0-8.98,12.893,54.684,54.684,0,0,0-3.048,19.031,52.16,52.16,0,0,0,3.09,18.908,26.787,26.787,0,0,0,8.98,12.276Q620.452-28.176,629.1-28.176Z" transform="translate(-9.227 178.366)"/></svg>,
        },
        {
          name: 'surfing',
          svgTitle: <svg xmlns="http://www.w3.org/2000/svg" width="817.849" height="227.633" viewBox="0 0 817.849 227.633" fill="currentColor"><path id="Path_3" data-name="Path 3" d="M106.2-120.2q-.989-9.969-8.486-15.489t-20.349-5.52a39.455,39.455,0,0,0-14.747,2.43,20.739,20.739,0,0,0-9.186,6.714,15.921,15.921,0,0,0-3.172,9.722,13.688,13.688,0,0,0,1.936,7.909A18.891,18.891,0,0,0,58-108.626a41.484,41.484,0,0,0,8.568,4.2,83.744,83.744,0,0,0,10.381,3.007l15.159,3.625A106.923,106.923,0,0,1,112.375-91.2a61.563,61.563,0,0,1,15.983,10.134,42.606,42.606,0,0,1,10.5,14.17,45.19,45.19,0,0,1,3.831,18.7q-.082,15.489-7.868,26.817T112.416-3.831Q97.793,2.389,77.2,2.389q-20.432,0-35.55-6.261T18.084-22.45Q9.639-34.767,9.227-52.974h34.52a25.5,25.5,0,0,0,4.9,14.129,26.28,26.28,0,0,0,11.616,8.486,45.2,45.2,0,0,0,16.518,2.842,43.053,43.053,0,0,0,15.777-2.636,24.145,24.145,0,0,0,10.422-7.332,16.932,16.932,0,0,0,3.707-10.793,14.128,14.128,0,0,0-3.337-9.557,26.051,26.051,0,0,0-9.722-6.591A100.428,100.428,0,0,0,78.02-69.369L59.648-73.983q-21.338-5.19-33.7-16.23T13.676-119.955q-.082-15.324,8.2-26.776t22.78-17.878q14.5-6.426,32.955-6.426,18.784,0,32.831,6.426t21.874,17.878a47.3,47.3,0,0,1,8.074,26.528ZM247.077-53.881v-72.665h35.1V0h-33.7V-22.986h-1.318A37.444,37.444,0,0,1,232.947-5.108q-9.928,6.756-24.18,6.756A42.645,42.645,0,0,1,186.44-4.119,39.378,39.378,0,0,1,171.4-20.514q-5.4-10.628-5.479-25.457v-80.574h35.1v74.313q.082,11.2,6.014,17.713t15.9,6.509A24.96,24.96,0,0,0,234.8-30.936a22.622,22.622,0,0,0,8.939-8.692Q247.159-45.395,247.077-53.881ZM310.185,0V-126.545H344.21v22.08h1.318q3.46-11.781,11.616-17.837a30.673,30.673,0,0,1,18.784-6.055,53.086,53.086,0,0,1,5.685.33,40.026,40.026,0,0,1,5.355.906V-95.98a45.854,45.854,0,0,0-6.838-1.318,61.429,61.429,0,0,0-7.991-.577,28.117,28.117,0,0,0-13.8,3.337,24.794,24.794,0,0,0-9.557,9.268,26.4,26.4,0,0,0-3.5,13.676V0ZM479.406-126.545v26.364H401.3v-26.364ZM419.182,0V-135.69q0-13.759,5.4-22.821a34.155,34.155,0,0,1,14.788-13.594,48.5,48.5,0,0,1,21.338-4.531,81.908,81.908,0,0,1,14.788,1.236,102.251,102.251,0,0,1,10.01,2.224l-6.261,26.364a44.357,44.357,0,0,0-5.067-1.236,32.514,32.514,0,0,0-6.138-.577q-7.744,0-10.793,3.584t-3.048,10.01V0Zm81.645,0V-126.545h35.1V0ZM518.54-142.858a18.987,18.987,0,0,1-13.429-5.232,16.587,16.587,0,0,1-5.6-12.564,16.5,16.5,0,0,1,5.6-12.482,18.884,18.884,0,0,1,13.347-5.232,18.946,18.946,0,0,1,13.47,5.232,16.554,16.554,0,0,1,5.561,12.482,16.642,16.642,0,0,1-5.561,12.564A18.843,18.843,0,0,1,518.54-142.858Zm80.491,69.7V0h-35.1V-126.545h33.449v22.327h1.483a35.521,35.521,0,0,1,14.088-17.507q9.886-6.467,23.974-6.467,13.182,0,22.986,5.767a39.253,39.253,0,0,1,15.242,16.436q5.438,10.669,5.438,25.416V0H645.5V-74.312q.082-11.616-5.932-18.166t-16.56-6.55a24.941,24.941,0,0,0-12.482,3.048,20.965,20.965,0,0,0-8.4,8.857A30.733,30.733,0,0,0,599.031-73.159ZM765.2,49.267q-17.054,0-29.206-4.614t-19.32-12.44a37.694,37.694,0,0,1-9.31-17.384l32.46-4.366a20.187,20.187,0,0,0,4.7,6.55,24.4,24.4,0,0,0,8.527,5.067,37.387,37.387,0,0,0,12.976,1.977q11.452,0,18.908-5.437T792.392.741V-22.409h-1.483a33.35,33.35,0,0,1-6.92,9.969,34.874,34.874,0,0,1-11.864,7.662,45.6,45.6,0,0,1-17.3,2.966,51.471,51.471,0,0,1-25.911-6.632q-11.658-6.632-18.537-20.349T703.5-63.52q0-21.5,7-35.92t18.661-21.585a47.907,47.907,0,0,1,25.581-7.168q10.628,0,17.8,3.584a35.231,35.231,0,0,1,11.575,8.9,49.115,49.115,0,0,1,6.8,10.422h1.318v-21.256h34.849V1.236q0,15.818-7.909,26.487T797.294,43.83Q783.33,49.267,765.2,49.267Zm.742-77.443a23.945,23.945,0,0,0,14.376-4.243,26.765,26.765,0,0,0,9.063-12.193,51.446,51.446,0,0,0,3.172-19.072A54.075,54.075,0,0,0,789.426-83a28.193,28.193,0,0,0-9.062-12.729,23.052,23.052,0,0,0-14.418-4.531,22.9,22.9,0,0,0-14.582,4.655,28.47,28.47,0,0,0-8.98,12.893,54.684,54.684,0,0,0-3.048,19.031,52.16,52.16,0,0,0,3.09,18.908A26.787,26.787,0,0,0,751.4-32.5Q757.3-28.176,765.946-28.176Z" transform="translate(-9.227 178.366)" /></svg>,
        }
      ],
      showInterest: false,
      selectedInterest: '',
    };
    this.handleClick = this.handleClick.bind(this);
  }

  componentDidMount() {
    this.stageAboutPage();
  };

  stageAboutPage = () => {
    // Set elements position
    gsap.set('.hero .title-container', { opacity: 0, translateY: 100, });
    gsap.set('.hero button', { opacity: 0 });

    // Init timeline
    this.AboutPageTimeline();
  };

  AboutPageTimeline = () => {
    // Timeline
    const timeline = gsap.timeline();
    
    // Title
    timeline.to('.hero .title-container', {translateY: 0, opacity: 1, duration: 0.5, delay: 0.5 });

    // Buttons
    timeline.fromTo('.hero button', { opacity: 0 }, { opacity: 1, duration: 0.5, stagger: 0.4 });

    return timeline;

  }
  
  /**
   * @desc handle click on interest button
   * @param {*} interest 
   */
  handleClick = (interest) => {
    this.setState({
      showInterest: true,
      // selectedInterest: interest,
    });
    this.setActiveInterest(interest);
  }

  /**
   * @desc set the active interest
   * @param {*} interest 
   */
  setActiveInterest = (interest) => {
    // setState is asynchronous
    // console.log will execute before state is updated
    this.setState({ selectedInterest: interest, }, () => { 
      console.log('(About.js) selectedInterest:', this.state.selectedInterest);
    });
  }

  /**
   * Handle unmount of AboutInterest component
   */
  handleInterestUnmount = () => {
    this.setState({
      showInterest: false,
    });
  }

  render() {
    return (
      <div className="about  page">

        <section className="hero">
          <div className="hero__content">
    
            <div className="background-image">
              <img
                src={HeroImage} 
                alt="mountain" 
                onLoad={() => this.setState({isLoaded: true})}
              />
              <img 
                className="mountain-clipping" 
                src={HeroImageClipping} 
                alt="mountain"
              />
            </div>
        
            <div className="title-container">
              <h1 className="title--about  title">about</h1>
              <h1 className="title--me  title">me</h1>
            </div>

            {this.state.interests.map((interest, index) => {
              return (
                <AboutButton 
                  key={index} 
                  index={index} 
                  interest={interest} 
                  // interest={interest.title} 
                  handleClick={this.handleClick}
                />
              );
            })}
    
            <Link className="home-btn" to="/"><Home /></Link>
        
          </div>
        </section>

        {this.state.showInterest &&
          <AboutInterest 
            interest={this.state.selectedInterest}
            showInterest={this.state.showInterest}
            // image={this.state.interests[this.state.selectedInterest].image}
            unmountComponent={this.handleInterestUnmount}
          />
        }

      </div>
    );
  }

}

export default About;
